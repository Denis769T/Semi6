//Краткое описание принципов SOLID, применёные в программе.
//Класс User-родительский класс для класса Teache(Student и т.д). Отвечает за хранение данных ФИО,
// он соответствует принципу единственной ответственности SRP.
//
//Мы можем расширить этот класс без изменения исходного кода, добавив классы Teache и еще много классов,
// например Student- это есть принцип открытости, закрытости OCR
//
//Классы Teache мы можем использовать вместо класса User -родительский класс мы можем не трогать,
// расширяя функционал Teache поэтому здесь действует принцип подстановки Барбары Лисков.LSP
//
//User-родительский класс, содержит основные методы работы с данными ФИО поэтому здесь в какой-то мере действует принцип разделения
//интерфейса ISP.
//
//Принцип инверсии зависимостей(DIP) - User не зависим, ни от одного класса.
//
//Интерфейсы UserComparator, UserService, UserView - это шаблоны, конструкторы для классов TeacheComparator,
// TeacheService, TeacheView можно добавить StudentComparator, StudentService, StudentView(действуют всё те же принципы)
//


public class Main {
    public static void main(String[] args) {

    }
}